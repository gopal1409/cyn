 38  nano deployment.yml
##as we know that all the communicatio to your kubernetes cluster happen using api  
apiVersion: apps/v1
kind: Deployment  #pod #server #networkpolicy #configmap #secret #probes #jobs
metadata: 
  name: nginx-deployment #deployment is the api but when it is created in k8s it is called as nginx-deployment
  labels: #inside k8s we define labels
    app: nginx #label is used to identify 
    #gopal: das
spec: #this is the specification of your deployment. 
  replicas: 2
  selector: #selector is filed of key value
    matchLabels:
     app: nginx 
  template: #when two pod is created inside the two pod we are defineing container defination as template
    metadata:
      labels:
        app: nginx #the template need to map with the pod
    spec: #this is the specification of your template
      containers: #where we define the contianer defination
      - name: nginx 
        image: nginx:1.14.2
        ports:
          - containerPort: 80
###save the file using ctrl x press y and enter
###apply the file 
   39  kubectl apply -f deployment.yml
  ##the below command will show the deployment try agains the deploy will be in ready state
   42  kubectl get deploy
##dewsribe will give you more about deployment
   43  kubectl describe deploy nginx-deployment
##check the rs which si a combination of deployment+rs which is unique hash value generated by k8s
   44  kubectl get rs
##pod is a combination of deployment+rs+podid
   45  kubectl get pod
#once you delete a pod a new pod will be generated
   46  kubectl delete pod nginx-deployment-86dcfdf4c6-bw5xp
   47  kubectl get pod

